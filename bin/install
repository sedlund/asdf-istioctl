#!/usr/bin/env bash
#
# Copyright (C) 2019 Innnovsquare
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License

set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
TMPDIR=${TMPDIR:-/tmp}
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_istioctl() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $version)"

  mkdir -p "${bin_install_path}"

  local bin_path="${bin_install_path}/istioctl"
  echo "Downloading istioctl from ${download_url}"
  echo "bin_install_path: ${bin_install_path}"
  cd $TMPDIR
  curl -L "$download_url" | tar xz
  mv $PWD/istio-$version/bin/istioctl ${bin_install_path}
  chmod +x ${bin_install_path}
  rm -rf $PWD/istio-$version
}

get_os() {
  uname="$(uname -s)"
  case "${uname}" in
      Linux*)     machine=linux;;
      Darwin*)    machine=osx;;
      *)          machine="UNKNOWN:${uname}"
  esac

  echo ${machine}
}

get_arch() {
  local local_arch=$(uname -m)
  local istio_arch=""

  case "${local_arch}" in
    x86_64)
      istio_arch=amd64
      ;;
    armv8*)
      istio_arch=arm64
      ;;
    aarch64*)
      istio_arch=arm64
      ;;
    armv*)
      istio_arch=armv7
      ;;
    amd64|arm64)
      istio_arch=${local_arch}
      ;;
    *)
      echo "This system's architecture, ${local_arch}, isn't supported"
      exit 1
      ;;
  esac

  echo ${istio_arch}
}

is_new_download_link() {
  local version
  IFS='.' read -r -a version <<< "$1"
  local major="${version[0]}"
  local minor="${version[1]}"
  if [ "${major}" -ge 1 -a "${minor}" -ge 6 ]; then
    echo 0
  else
    echo 1
  fi
}

get_download_url() {
  local version="$1"
  local os_dist="$(get_os)"
  local is_new="$(is_new_download_link $version)"

  if [ "${os_dist}" = "linux" -a "${is_new}" -eq 0 ]; then
    os_dist="${os_dist}-$(get_arch)"
  fi
  echo "https://github.com/istio/istio/releases/download/${version}/istio-${version}-${os_dist}.tar.gz"
}

install_istioctl $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH

